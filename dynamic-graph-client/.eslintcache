[{"/home/gyunghoe/react-practice/dynamic-graph-client/src/index.tsx":"1","/home/gyunghoe/react-practice/dynamic-graph-client/src/reportWebVitals.ts":"2","/home/gyunghoe/react-practice/dynamic-graph-client/src/App.tsx":"3","/home/gyunghoe/react-practice/dynamic-graph-client/src/component/DynamicLineGraph.tsx":"4"},{"size":500,"mtime":1608615759693,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1608615759693,"results":"7","hashOfConfig":"6"},{"size":260,"mtime":1608622097203,"results":"8","hashOfConfig":"6"},{"size":1203,"mtime":1608631192463,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1l0ldcz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/home/gyunghoe/react-practice/dynamic-graph-client/src/index.tsx",[],["21","22"],"/home/gyunghoe/react-practice/dynamic-graph-client/src/reportWebVitals.ts",[],"/home/gyunghoe/react-practice/dynamic-graph-client/src/App.tsx",["23"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport DynamicLineGraph from './component/DynamicLineGraph';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DynamicLineGraph/>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gyunghoe/react-practice/dynamic-graph-client/src/component/DynamicLineGraph.tsx",["24"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport Chart from 'react-apexcharts';\n\nconst DynamicLineGraph = () => {\n\n  const [optionCategories, setOptionCategories] = useState([1,2,3,4,5,6,7,8,9])\n  const [seriesData, setSeriesData] = useState([1,2,3,4,5,6,7,8,9])\n  const options = {\n    chart: {\n      id: \"basic-bar\",\n    },\n    xaxis: {\n      categories: optionCategories\n    },\n    stroke: {\n      curve: 'smooth'\n    }\n  }\n  const series = [{\n    name:\"series-1\",\n    data: seriesData\n  }]\n\n  async function updateData() {\n    console.log(seriesData);\n    let seriesDataCache = seriesData.slice(1);\n    await axios.get('http://localhost:8000/')\n      .then((res) => {\n        const newData = res.data;\n        seriesDataCache.push(newData);\n      })\n    setSeriesData(seriesDataCache);\n  }\n\n  useEffect(() => {\n    setTimeout(() => updateData(), 1000);\n  });\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"mixed-chart\">\n          <Chart \n            options={options}\n            series={series}\n            type=\"line\"\n            width=\"500\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DynamicLineGraph;",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":8,"column":28,"nodeType":"31","messageId":"32","endLine":8,"endColumn":47},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setOptionCategories' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]